
NifSharedSources = ["c_src/esqlite3_nif.c", "c_src/queue.c"].
NifStaticSources = NifSharedSources ++ ["c_src/sqlite3/sqlite3.c"].
CFlagsDefault = "$CFLAGS -O2 -DSQLITE_THREADSAFE=1 -DSQLITE_USE_URI -DSQLITE_ENABLE_FTS5 -DSQLITE_DQS=0 -DSQLITE_ENABLE_JSON1 -DSQLITE_DEFAULT_MEMSTATUS=0 -DSQLITE_LIKE_DOESNT_MATCH_BLOBS -DSQLITE_MAX_EXPR_DEPTH=0 -DSQLITE_OMIT_DEPRECATED -DSQLITE_OMIT_PROGRESS_CALLBACK -DSQLITE_OMIT_SHARED_CACHE -DSQLITE_USE_ALLOCA -DSQLITE_ENABLE_MATH_FUNCTIONS -DSQLITE_ENABLE_RTREE=1 -DSQLITE_ENABLE_COLUMN_METADATA -DSQLITE_ENABLE_GEOPOLY".
DrvLdFlagsDefault = "-shared -lsqlite3".

DrvLdFlags =
    case os:getenv("ESQLITE_CFLAGS") of
        NotDefined when NotDefined == false; NotDefined == [] -> DrvLdFlagsDefault;
        DrvLdFlagsOverride -> DrvLdFlagsOverride
    end.

{NifSources, LdEnv, CFlagsExt} =
    case os:getenv("ESQLITE_USE_SYSTEM") of
        NotDefined when NotDefined == false; NotDefined == [] -> {NifStaticSources, [], " -Ic_src/sqlite3"};
        _Defined -> {NifSharedSources, [{"DRV_LDFLAGS", DrvLdFlags}], []}
    end.

CFlags =
    case os:getenv("ESQLITE_CFLAGS") of
        NotDefined when NotDefined == false; NotDefined == [] -> CFlagsDefault ++ CFlagsExt;
        CFlagsOverride -> CFlagsOverride
    end.

[
    {require_min_otp_vsn, "R15"},
    {port_env, [
        %% Default darwin ldflags causes loading of system sqlite. Removed -bundle flag.
        {"darwin", "DRV_LDFLAGS",
            "-flat_namespace -undefined suppress $ERL_LDFLAGS"},

        {"solaris", "CFLAGS",
            "$CFLAGS -std=c99"},

        {"linux", "CFLAGS",
            "$CFLAGS -std=c11"},

        {"CFLAGS", CFlags}
    ] ++ LdEnv},
    {port_specs, [
        {"priv/esqlite3_nif.so", NifSources}
    ]},

    {plugins, [pc]},

    {provider_hooks,
        [{post,
        [{compile, {pc, compile}},
            {clean, {pc, clean}}]}]}
].
